import { useState, useEffect } from 'react';

const TransformationStep = ({ step, index }) => {
    const [isExpanded, setIsExpanded] = useState(false);
    
    return (
        <div className="transformation-step">
            <div 
                className="step-header"
                onClick={() => setIsExpanded(!isExpanded)}
            >
                <span className="step-number">–®–∞–≥ {step.—à–∞–≥ || index + 1}</span>
                <span className="step-action">{step.–¥–µ–π—Å—Ç–≤–∏–µ}</span>
                <span className={`step-toggle ${isExpanded ? 'expanded' : ''}`}>‚ñ∂</span>
            </div>
            {isExpanded && (
                <div className="step-details">
                    <p className="step-description">{step.–æ–ø–∏—Å–∞–Ω–∏–µ}</p>
                    {step.—Å—Ç–æ–ª–±—Ü—ã_–¥–æ && (
                        <div className="columns-section">
                            <h5>–°—Ç–æ–ª–±—Ü—ã –¥–æ:</h5>
                            <div className="columns-list">
                                {step.—Å—Ç–æ–ª–±—Ü—ã_–¥–æ.map((col, i) => (
                                    <span key={i} className="column-tag">{col}</span>
                                ))}
                            </div>
                        </div>
                    )}
                    {step.–Ω–æ–≤—ã–µ_—Å—Ç–æ–ª–±—Ü—ã && (
                        <div className="columns-section">
                            <h5>–ù–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã:</h5>
                            <div className="columns-list">
                                {step.–Ω–æ–≤—ã–µ_—Å—Ç–æ–ª–±—Ü—ã.map((col, i) => (
                                    <span key={i} className="column-tag new">{col}</span>
                                ))}
                            </div>
                        </div>
                    )}
                    {step.–Ω–∞–π–¥–µ–Ω–Ω—ã–µ_–ø—Ä–æ–±–ª–µ–º—ã && (
                        <div className="problems-section">
                            <h5>–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:</h5>
                            <ul>
                                {step.–Ω–∞–π–¥–µ–Ω–Ω—ã–µ_–ø—Ä–æ–±–ª–µ–º—ã.map((problem, i) => (
                                    <li key={i}>{problem}</li>
                                ))}
                            </ul>
                        </div>
                    )}
                    {step.–¥–µ—Ç–∞–ª–∏ && (
                        <p className="step-additional-details">{step.–¥–µ—Ç–∞–ª–∏}</p>
                    )}
                </div>
            )}
        </div>
    );
};

const FileTransformation = ({ fileName, data, onEdit, onDelete }) => {
    const [isExpanded, setIsExpanded] = useState(false);
    
    const getComplexityColor = (complexity) => {
        if (complexity.includes('–ù–∏–∑–∫–∞—è')) return 'green';
        if (complexity.includes('–°—Ä–µ–¥–Ω—è—è')) return 'yellow';
        if (complexity.includes('–í—ã—Å–æ–∫–∞—è')) return 'red';
        return 'gray';
    };
    
    return (
        <div className="file-transformation">
            <div 
                className="file-header"
                onClick={() => setIsExpanded(!isExpanded)}
            >
                <div className="file-main-info">
                    <span className="file-icon">üìÑ</span>
                    <span className="file-name-historical">{fileName}</span>
                    <span className={`expand-icon ${isExpanded ? 'expanded' : ''}`}>‚ñ∂</span>
                </div>
                <div className="file-stats">
                    <span className="stat-badge">{data["üìä_–ò–¢–û–ì–û–í–ê–Ø_–°–¢–ê–¢–ò–°–¢–ò–ö–ê"]?.—É—Å–ø–µ—à–Ω–æ—Å—Ç—å_–æ–±—Ä–∞–±–æ—Ç–∫–∏ || '‚úÖ'}</span>
                    <span className={`complexity-badge ${getComplexityColor(data["üìä_–ò–¢–û–ì–û–í–ê–Ø_–°–¢–ê–¢–ò–°–¢–ò–ö–ê"]?.—Å–ª–æ–∂–Ω–æ—Å—Ç—å_—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ || '')}`}>
                        {data["üìä_–ò–¢–û–ì–û–í–ê–Ø_–°–¢–ê–¢–ò–°–¢–ò–ö–ê"]?.—Å–ª–æ–∂–Ω–æ—Å—Ç—å_—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
                    </span>
                </div>
            </div>
            
            {isExpanded && (
                <div className="file-details">
                    <div className="transformation-info">
                        <div className="info-section">
                            <h4>üì• –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h4>
                            <p>–§–∞–π–ª: <strong>{data["üì•_–ò–°–•–û–î–ù–´–ï_–î–ê–ù–ù–´–ï"]?.–∏—Å—Ö–æ–¥–Ω—ã–π_—Ñ–∞–π–ª}</strong></p>
                            <p>–°—Ç–æ–ª–±—Ü–æ–≤: <strong>{data["üì•_–ò–°–•–û–î–ù–´–ï_–î–ê–ù–ù–´–ï"]?.–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–∏—Å—Ö–æ–¥–Ω—ã—Ö_—Å—Ç–æ–ª–±—Ü–æ–≤}</strong></p>
                        </div>
                        
                        <div className="info-section">
                            <h4>‚öôÔ∏è –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π</h4>
                            <div className="changes-stats">
                                <span className="stat added">‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ: {data["‚öôÔ∏è_–ê–ù–ê–õ–ò–ó_–ò–ó–ú–ï–ù–ï–ù–ò–ô"]?.—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_–∏–∑–º–µ–Ω–µ–Ω–∏–π?.–¥–æ–±–∞–≤–ª–µ–Ω–æ || 0}</span>
                                <span className="stat removed">‚ûñ –£–¥–∞–ª–µ–Ω–æ: {data["‚öôÔ∏è_–ê–ù–ê–õ–ò–ó_–ò–ó–ú–ï–ù–ï–ù–ò–ô"]?.—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_–∏–∑–º–µ–Ω–µ–Ω–∏–π?.—É–¥–∞–ª–µ–Ω–æ || 0}</span>
                                <span className="stat kept">‚úì –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {data["‚öôÔ∏è_–ê–ù–ê–õ–ò–ó_–ò–ó–ú–ï–ù–ï–ù–ò–ô"]?.—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_–∏–∑–º–µ–Ω–µ–Ω–∏–π?.—Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ || 0}</span>
                            </div>
                        </div>
                        
                        <div className="info-section">
                            <h4>üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç</h4>
                            <p>–§–∞–π–ª: <strong>{data["üì§_–†–ï–ó–£–õ–¨–¢–ò–†–£–Æ–©–ò–ï_–î–ê–ù–ù–´–ï"]?.—Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π_—Ñ–∞–π–ª}</strong></p>
                            {data["üì§_–†–ï–ó–£–õ–¨–¢–ò–†–£–Æ–©–ò–ï_–î–ê–ù–ù–´–ï"]?.—Ñ–æ—Ä–º—É–ª—ã_–∏_–ø—Ä–∞–≤–∏–ª–∞ && data["üì§_–†–ï–ó–£–õ–¨–¢–ò–†–£–Æ–©–ò–ï_–î–ê–ù–ù–´–ï"].—Ñ–æ—Ä–º—É–ª—ã_–∏_–ø—Ä–∞–≤–∏–ª–∞.length > 0 && (
                                <div className="formulas-list">
                                    <h5>–ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:</h5>
                                    {data["üì§_–†–ï–ó–£–õ–¨–¢–ò–†–£–Æ–©–ò–ï_–î–ê–ù–ù–´–ï"].—Ñ–æ—Ä–º—É–ª—ã_–∏_–ø—Ä–∞–≤–∏–ª–∞.map((formula, i) => (
                                        <span key={i} className="formula-tag">{formula}</span>
                                    ))}
                                </div>
                            )}
                        </div>
                    </div>
                    
                    {data["üîÑ_–ü–û–®–ê–ì–û–í–ê–Ø_–¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø"] && (
                        <div className="transformation-steps">
                            <h4>üîÑ –ü–æ—à–∞–≥–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
                            {data["üîÑ_–ü–û–®–ê–ì–û–í–ê–Ø_–¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø"].map((step, index) => (
                                <TransformationStep key={index} step={step} index={index} />
                            ))}
                        </div>
                    )}
                    
                    <div className="file-actions-historical">
                        <button className="btn btn-secondary" onClick={() => onEdit(fileName, data)}>
                            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                        <button className="btn btn-danger" onClick={() => onDelete(fileName)}>
                            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                        </button>
                    </div>
                </div>
            )}
        </div>
    );
};

const HistoricalWork = ({ historicalData, onUpdate }) => {
    const [searchTerm, setSearchTerm] = useState('');
    const [filterComplexity, setFilterComplexity] = useState('all');
    const [sortBy, setSortBy] = useState('name');
    
    const files = historicalData?.—Ñ–∞–π–ª—ã || {};
    
    const filteredFiles = Object.entries(files).filter(([fileName, data]) => {
        const matchesSearch = fileName.toLowerCase().includes(searchTerm.toLowerCase()) ||
                            data["üì•_–ò–°–•–û–î–ù–´–ï_–î–ê–ù–ù–´–ï"]?.–∏—Å—Ö–æ–¥–Ω—ã–π_—Ñ–∞–π–ª?.toLowerCase().includes(searchTerm.toLowerCase());
        
        const matchesComplexity = filterComplexity === 'all' || 
                                 (data["üìä_–ò–¢–û–ì–û–í–ê–Ø_–°–¢–ê–¢–ò–°–¢–ò–ö–ê"]?.—Å–ª–æ–∂–Ω–æ—Å—Ç—å_—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ || '').includes(filterComplexity);
        
        return matchesSearch && matchesComplexity;
    });
    
    const sortedFiles = filteredFiles.sort(([aName, aData], [bName, bData]) => {
        if (sortBy === 'name') return aName.localeCompare(bName);
        if (sortBy === 'complexity') {
            const aComplexity = aData["üìä_–ò–¢–û–ì–û–í–ê–Ø_–°–¢–ê–¢–ò–°–¢–ò–ö–ê"]?.—Å–ª–æ–∂–Ω–æ—Å—Ç—å_—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ || '';
            const bComplexity = bData["üìä_–ò–¢–û–ì–û–í–ê–Ø_–°–¢–ê–¢–ò–°–¢–ò–ö–ê"]?.—Å–ª–æ–∂–Ω–æ—Å—Ç—å_—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ || '';
            return aComplexity.localeCompare(bComplexity);
        }
        return 0;
    });
    
    const handleEdit = (fileName, data) => {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        console.log('Editing:', fileName, data);
        // TODO: Implement edit functionality
    };
    
    const handleDelete = (fileName) => {
        if (window.confirm(`–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –æ —Ñ–∞–π–ª–µ "${fileName}"?`)) {
            const newData = { ...historicalData };
            delete newData.—Ñ–∞–π–ª—ã[fileName];
            onUpdate(newData);
        }
    };
    
    return (
        <div className="historical-work">
            <div className="historical-header">
                <div className="stats-overview">
                    <span className="stat-item">
                        üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: <strong>{historicalData?.—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞?.–≤—Å–µ–≥–æ_–≥–æ—Ç–æ–≤—ã—Ö_—Ñ–∞–π–ª–æ–≤ || 0}</strong>
                    </span>
                    <span className="stat-item">
                        üì• –ò—Å—Ö–æ–¥–Ω—ã—Ö: <strong>{historicalData?.—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞?.–≤—Å–µ–≥–æ_–∏—Å—Ö–æ–¥–Ω—ã—Ö_—Ñ–∞–π–ª–æ–≤ || 0}</strong>
                    </span>
                    <span className="stat-item">
                        ‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ: <strong>{historicalData?.—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞?.–ø–æ–∫—Ä—ã—Ç–∏–µ_–∞–Ω–∞–ª–∏–∑–∞ || '0%'}</strong>
                    </span>
                </div>
            </div>
            
            <div className="historical-controls">
                <input
                    type="text"
                    placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="search-input"
                />
                
                <select 
                    value={filterComplexity}
                    onChange={(e) => setFilterComplexity(e.target.value)}
                    className="filter-select"
                >
                    <option value="all">–í—Å–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</option>
                    <option value="–ù–∏–∑–∫–∞—è">üü¢ –ù–∏–∑–∫–∞—è</option>
                    <option value="–°—Ä–µ–¥–Ω—è—è">üü° –°—Ä–µ–¥–Ω—è—è</option>
                    <option value="–í—ã—Å–æ–∫–∞—è">üî¥ –í—ã—Å–æ–∫–∞—è</option>
                </select>
                
                <select 
                    value={sortBy}
                    onChange={(e) => setSortBy(e.target.value)}
                    className="sort-select"
                >
                    <option value="name">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –ü–æ –∏–º–µ–Ω–∏</option>
                    <option value="complexity">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –ü–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</option>
                </select>
            </div>
            
            <div className="files-list-historical">
                {sortedFiles.length === 0 ? (
                    <p className="no-files">–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                ) : (
                    sortedFiles.map(([fileName, data]) => (
                        <FileTransformation
                            key={fileName}
                            fileName={fileName}
                            data={data}
                            onEdit={handleEdit}
                            onDelete={handleDelete}
                        />
                    ))
                )}
            </div>
        </div>
    );
};

export default HistoricalWork; 